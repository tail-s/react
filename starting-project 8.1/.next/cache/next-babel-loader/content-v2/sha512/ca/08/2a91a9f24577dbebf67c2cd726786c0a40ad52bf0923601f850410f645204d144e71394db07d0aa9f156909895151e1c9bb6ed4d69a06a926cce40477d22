{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lunar\\\\Documents\\\\study\\\\react\\\\starting-project 8.1\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeedupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://ssafyonly:thwls123@cluster0.nsjxpnc.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close(); // hardcording\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    //     {\n    //         params: {\n    //             meetupId: 'm1',\n    //         } \n    //     },\n    //     {\n    //         params: {\n    //             meetupId: 'm2',\n    //         } \n    //     },\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupDate: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"A First Meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"The meetup description\"\n      }\n    }\n  };\n}\nexport default MeedupDetails;","map":{"version":3,"sources":["C:/Users/lunar/Documents/study/react/starting-project 8.1/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeedupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupDate","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AAGrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,gFADV;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,mGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP,GATmC,CAWnC;;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADoB,KAAb,CAAZ,CAFJ,CAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBG,GAAP;AAkBH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAQ;AACJM,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,gFADC;AAERC,QAAAA,EAAE,EAAET,QAFI;AAGRU,QAAAA,KAAK,EAAE,gBAHC;AAIRC,QAAAA,OAAO,EAAE,0BAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADH,GAAR;AAWH;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeedupDetails() {\r\n\r\n\r\n    return (\r\n        <MeetupDetail\r\n            image=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\r\n            title=\"A First Meetup\"\r\n            address=\"Some Street 5, Some City\"\r\n            description=\"The meetup description\"\r\n        />\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://ssafyonly:thwls123@cluster0.nsjxpnc.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    // hardcording\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({ \r\n            params: { meetupId: meetup._id.toString() },\r\n     }))\r\n        // paths: [\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm1',\r\n        //         } \r\n        //     },\r\n        //     {\r\n        //         params: {\r\n        //             meetupId: 'm2',\r\n        //         } \r\n        //     },\r\n        // ]\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data for a single meetup\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    return ({\r\n        props: {\r\n            meetupDate: {\r\n                image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n                id: meetupId,\r\n                title: \"A First Meetup\",\r\n                address: \"Some Street 5, Some City\",\r\n                description: \"The meetup description\"\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport default MeedupDetails;"]},"metadata":{},"sourceType":"module"}